[{"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/index.tsx":"1","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/reportWebVitals.ts":"2","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/App/App.tsx":"3","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Game/Game.tsx":"4","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/service.ts":"5","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Game/constants.ts":"6","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Player/Player.tsx":"7","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Buttons/Buttons.tsx":"8","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Card/Card.tsx":"9"},{"size":515,"mtime":1610360689785,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1610359887020,"results":"12","hashOfConfig":"11"},{"size":192,"mtime":1610367786057,"results":"13","hashOfConfig":"11"},{"size":3266,"mtime":1610381751415,"results":"14","hashOfConfig":"11"},{"size":571,"mtime":1610368271623,"results":"15","hashOfConfig":"11"},{"size":348,"mtime":1610381083799,"results":"16","hashOfConfig":"11"},{"size":750,"mtime":1610378690000,"results":"17","hashOfConfig":"11"},{"size":968,"mtime":1610377349245,"results":"18","hashOfConfig":"11"},{"size":444,"mtime":1610378641086,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"176u80r",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/index.tsx",[],["41","42"],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/reportWebVitals.ts",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/App/App.tsx",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Game/Game.tsx",["43"],"import React from 'react'\nimport { Player } from '../Player/Player'\nimport { Buttons } from '../Buttons/Buttons'\nimport service from '../../service'\nimport { GAME_STATE, CARD_VALUES, MAX_SCORE, MIN_FINISH_VALUE } from './constants'\nimport './Game.css'\nimport { ICard, IPlayer } from '../../interfaces'\n\nexport const Game = () => {\n  const [gameState, setGameState] = React.useState<GAME_STATE>(GAME_STATE.IDLE)\n  const [deckId, setDeckId] = React.useState<string>('')\n  const [player, setPlayer] = React.useState<IPlayer>()\n  const [dealer, setDealer] = React.useState<IPlayer>()\n\n  React.useEffect(() => {\n    if (gameState === GAME_STATE.DEALER_TURN) {\n      playDealer()\n    }\n  }, [gameState])\n\n  const start = async () => {\n    const { id: deckId } = await service.createDeck()\n    setDeckId(deckId)\n\n    const { cards: playerCards } = await service.drawCards(deckId, 2)\n    setPlayer({\n      name: 'Player',\n      cards: playerCards,\n      score: calculateScore(playerCards)\n    })\n\n    const { cards: dealerCards } = await service.drawCards(deckId, 2)\n    setDealer({\n      name: 'Dealer',\n      cards: dealerCards,\n      score: calculateScore(dealerCards)\n    })\n\n    setGameState(GAME_STATE.PLAYER_TURN)\n  }\n\n  const draw = async () => {\n    const { cards: newCards } = await service.drawCards(deckId)\n    const newHand = [...player!.cards, ...newCards]\n    const newScore = calculateScore(newHand)\n    const maxExceeded = newScore > MAX_SCORE\n\n    setPlayer({\n      ...player,\n      cards: newHand,\n      score: newScore,\n      maxExceeded\n    } as IPlayer)\n\n    if (maxExceeded) {\n      stay()\n    }\n  }\n\n  const stay = async () => {\n    setGameState(GAME_STATE.DEALER_TURN)\n  }\n\n  const calculateScore = (cards: ICard[]): number => {\n    let score = cards.reduce((total, card) => total + CARD_VALUES[card.value], 0)\n\n    if (score > MAX_SCORE) {\n      const hasAces = cards.some(card => card.value === 'ACE')\n\n      if (hasAces) {\n        score = cards.reduce((total, card) => total + CARD_VALUES[card.value === 'ACE' ? 'ACE1' : card.value], 0)\n      }\n    }\n\n    return score\n  }\n\n  const playDealer = async () => {\n    let localDealer = { ...dealer! }\n    while (calculateWinProbability(localDealer) === 1) {\n      const { cards: newCards } = await service.drawCards(deckId)\n      const newHand = [...localDealer.cards, ...newCards]\n      const newScore = calculateScore(newHand)\n\n      localDealer = {\n        ...dealer!,\n        cards: newHand,\n        score: newScore\n      } as IPlayer\n    }\n\n    setDealer(localDealer)\n    setGameState(GAME_STATE.FINISHED)\n  }\n\n  const calculateWinProbability = (dealer: IPlayer): number => {\n    if (player!.score > MAX_SCORE) {\n      return 0;\n    }\n\n    if (dealer!.score > player!.score) {\n      return 0;\n    }\n\n    if (dealer!.score < MIN_FINISH_VALUE) {\n      return 1;\n    }\n\n    if (player!.score >= MIN_FINISH_VALUE) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n\n  return (\n    <main className='game'>\n      {gameState !== GAME_STATE.IDLE && (\n        <div className='game__table'>\n          <Player {...dealer!} />\n          <Player {...player!} />\n        </div>\n      )}\n      <Buttons gameState={gameState} onStartClick={start} onDrawClick={draw} onStayClick={stay} />\n    </main>\n  )\n}","/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/service.ts",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Game/constants.ts",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Player/Player.tsx",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Buttons/Buttons.tsx",[],"/Users/mikita.savanovich/Projects/shelter/node-blackjack/client/src/components/Card/Card.tsx",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":19,"column":6,"nodeType":"52","endLine":19,"endColumn":17,"suggestions":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'playDealer'. Either include it or remove the dependency array.","ArrayExpression",["58"],["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [gameState, playDealer]",{"range":"61","text":"62"},[685,696],"[gameState, playDealer]"]